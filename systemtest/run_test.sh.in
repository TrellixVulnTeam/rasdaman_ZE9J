#!/bin/bash

# This file is part of rasdaman community.
#
# Rasdaman community is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Rasdaman community is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with rasdaman community.  If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2003-2016 Peter Baumann /
# rasdaman GmbH.
#
# For more information please see <http://www.rasdaman.org>
# or contact Peter Baumann via <baumann@rasdaman.com>.

PROG=$(basename $0)
VERSION="@VERSION_FULL@"
BUILD="@GIT_HASH@"

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ] ; do SOURCE="$(readlink "$SOURCE")"; done
SCRIPT_DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

. "$SCRIPT_DIR"/util/common.sh


log()   { echo -e "$PROG: $@"; }
error() { log "$@; exiting."; exit 1; }

TEST_SEQUENCE=$(ls -d @TEST_SEQUENCE@)
BIN_DIR="@BIN_DIR@"

[ -d "$BIN_DIR" ] || error "Rasdaman bin directory not found: '$BIN_DIR'"
[ -f "$BIN_DIR/rasql" ] || error "rasql not found: $BIN_DIR/rasql"

PATH=$BIN_DIR:$PATH

logf="test.log"
rm -f "$logf"

log "rasdaman $VERSION build $BUILD";
ret=0

for test_case in $TEST_SEQUENCE; do

    # determine test script
    TEST_SCRIPT="$test_case/test.sh"
    if [ ! -f $TEST_SCRIPT ]; then
        TEST_SCRIPT="$test_case/test.py"
        if [ ! -f $TEST_SCRIPT ]; then
            log "test script not found in $test_case (neither test.sh nor test.py); skipping test."
            continue
        fi
    fi

    echo
    echo "==================================================================================="
    log "Running test $TEST_SCRIPT\n"

    # execute test script, check result and log it along with execution time (s)
    SECONDS=0
    $TEST_SCRIPT
    rc=$?
    case $rc in
        0) status=OK;;
        2) status=SKIP;;
        *) status=FAIL; ret=$rc;;
    esac
    printf "%5s %4ds  $TEST_SCRIPT\n" $status $SECONDS >> "$logf"
done

echo
echo
log "TEST SUMMARY\n"
cat "$logf"

exit $ret
